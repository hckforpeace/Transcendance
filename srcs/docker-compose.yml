# services
services:
  app:
    image: app:user
    container_name: app
    build: requirements/app
    volumes:
      - ./secrets/env.sh:/etc/secrets/env.sh    # env_file:
      - database:/app/database/
    depends_on: # insures that wordpress service starts before Nginx
      - vault 
      - vault-agent
    networks:
      - Transcendence
    restart: always
    command: sh -c ". /etc/secrets/env.sh && npm run start"
    
#nginx
  nginx:
    image: owasp/modsecurity-crs:4.15.0-nginx-alpine-202506050606
    container_name: nginx
    user: root
    env_file:
      - .env
    ports: # port binding 442 on the host to 443 on the container
      - "3000:8845"
    depends_on: # insures that wordpress service starts before Nginx
      - app 
    networks:
      - Transcendence 
    restart: always
    volumes:
      - ./requirements/nginxModSec/log/modsec_audit.log:/var/log/modsec_audit.log # bind mount the volume to the container
  
  # alertmanager:
  #   image: ubuntu/alertmanager:0.28.0-24.04_stable
  #   container_name: alertmanager
  #   ports:
  #     - 9093:9093
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - Transcendence
  #   volumes:
  #     - ./requirements/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    # command:
    #   - '--config.file=/etc/alertmanager/config.yml'
    #   - '--storage.path=/alertmanager'

  # grafana
  grafana:
    image: grafana/grafana:main-ubuntu
    container_name: grafana
    ports:
      - 3001:3000
    env_file:
      - .env
    depends_on:
      - prometheus
    networks:
      - Transcendence
    volumes:
      - ./requirements/grafana/config/prometheus.yml:/etc/grafana/provisioning/datasources/prometheus.yml
      - ./requirements/grafana/config/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./requirements/grafana/config/dashboards/:/etc/grafana/provisioning/dashboards

  prometheus:
    image: ubuntu/prometheus
    container_name: prometheus
    ports: 
      - 9091:9090
    depends_on: # insures that wordpress service starts before Nginx
      - app 
    networks:
      - Transcendence
    volumes:
      - ./requirements/prometheus/:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=15d"
  
  node-exporter:
    image: node-exporter:user
    container_name: node-exporter 
    build: requirements/node-exporter
    networks:
      - Transcendence
    restart: always
    ports:
      - 9104:9100
      
  vault:
    image: hashicorp/vault:1.15.5
    container_name: vault
    ports:
      - "18200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=dev-token
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - ./requirements/vault/init/envirenment.sh:/init/envirenment.sh
      - vault-file:/vault
    networks:
      - Transcendence
    command: >
      sh -c "
        vault server -dev -dev-root-token-id=dev-token -dev-listen-address=0.0.0.0:8200 &
        sleep 3 &&
        export VAULT_ADDR=http://127.0.0.1:8200 &&
        export VAULT_TOKEN=dev-token &&
        sh /init/envirenment.sh
        wait
      "


  vault-agent:
      image: hashicorp/vault:1.15.5
      container_name: vault-agent
      environment:
        - VAULT_ADDR=http://vault:8200
        - VAULT_TOKEN=dev-token
      depends_on:
        - vault
      cap_add:
        - IPC_LOCK
      command: >
        sh -c "
          sleep 5 &&
          echo 'dev-token' > /tmp/vault-token &&
          vault agent -config=/etc/vault-agent/config.hcl -log-level=info
        "
      volumes:
        - ./requirements/vault-agent/config.hcl:/etc/vault-agent/config.hcl
        - ./requirements/vault-agent/template.tpl:/etc/vault-agent/template.tpl
        - ./secrets:/etc/secrets
      ports:
        - "8100:8100"
      networks:
        - Transcendence



volumes:
  vault-file:
    name: vault-file 
    driver: local
    driver_opts:
      device: /home/${USER}/volume/vault # To change in case I change laptop
      o : bind
      type : none
  database:
    name: database
    driver: local
    driver_opts:
      device: /home/${USER}/volume/database # To change in case I change laptop
      o : bind
      type : none
  prometheus-data:
    name: prometheus-data 
    driver: local
    driver_opts:
      device: /home/${USER}/volume/prometheus # To change in case I change laptop
      o : bind
      type : none

networks:
  Transcendence:
    name: Transcendence 

